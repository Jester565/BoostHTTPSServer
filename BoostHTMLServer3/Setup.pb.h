// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Setup.proto

#ifndef PROTOBUF_Setup_2eproto__INCLUDED
#define PROTOBUF_Setup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtobufPackets {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Setup_2eproto();
void protobuf_AssignDesc_Setup_2eproto();
void protobuf_ShutdownFile_Setup_2eproto();

class PackA0;
class PackA1;
class PackA2;

// ===================================================================

class PackA0 : public ::google::protobuf::Message {
 public:
  PackA0();
  virtual ~PackA0();

  PackA0(const PackA0& from);

  inline PackA0& operator=(const PackA0& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackA0& default_instance();

  void Swap(PackA0* other);

  // implements Message ----------------------------------------------

  inline PackA0* New() const { return New(NULL); }

  PackA0* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PackA0& from);
  void MergeFrom(const PackA0& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackA0* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, unsigned int size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:ProtobufPackets.PackA0)
 private:
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  friend void  protobuf_AddDesc_Setup_2eproto();
  friend void protobuf_AssignDesc_Setup_2eproto();
  friend void protobuf_ShutdownFile_Setup_2eproto();

  void InitAsDefaultInstance();
  static PackA0* default_instance_;
};
// -------------------------------------------------------------------

class PackA1 : public ::google::protobuf::Message {
 public:
  PackA1();
  virtual ~PackA1();

  PackA1(const PackA1& from);

  inline PackA1& operator=(const PackA1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackA1& default_instance();

  void Swap(PackA1* other);

  // implements Message ----------------------------------------------

  inline PackA1* New() const { return New(NULL); }

  PackA1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PackA1& from);
  void MergeFrom(const PackA1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackA1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtobufPackets.PackA1)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Setup_2eproto();
  friend void protobuf_AssignDesc_Setup_2eproto();
  friend void protobuf_ShutdownFile_Setup_2eproto();

  void InitAsDefaultInstance();
  static PackA1* default_instance_;
};
// -------------------------------------------------------------------

class PackA2 : public ::google::protobuf::Message {
 public:
  PackA2();
  virtual ~PackA2();

  PackA2(const PackA2& from);

  inline PackA2& operator=(const PackA2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PackA2& default_instance();

  void Swap(PackA2* other);

  // implements Message ----------------------------------------------

  inline PackA2* New() const { return New(NULL); }

  PackA2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PackA2& from);
  void MergeFrom(const PackA2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackA2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional string userName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, unsigned int size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:ProtobufPackets.PackA2)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_Setup_2eproto();
  friend void protobuf_AssignDesc_Setup_2eproto();
  friend void protobuf_ShutdownFile_Setup_2eproto();

  void InitAsDefaultInstance();
  static PackA2* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PackA0

// optional string username = 1;
inline bool PackA0::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackA0::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackA0::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackA0::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PackA0::username() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA0.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackA0::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA0.username)
}
inline void PackA0::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA0.username)
}
inline void PackA0::set_username(const char* value, unsigned int size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA0.username)
}
inline ::std::string* PackA0::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA0.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackA0::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackA0::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA0.username)
}

// -------------------------------------------------------------------

// PackA1

// optional uint32 id = 1;
inline bool PackA1::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackA1::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackA1::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackA1::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PackA1::id() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA1.id)
  return id_;
}
inline void PackA1::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA1.id)
}

// -------------------------------------------------------------------

// PackA2

// optional uint32 id = 1;
inline bool PackA2::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackA2::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PackA2::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PackA2::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PackA2::id() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA2.id)
  return id_;
}
inline void PackA2::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA2.id)
}

// optional string userName = 2;
inline bool PackA2::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackA2::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PackA2::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PackA2::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PackA2::username() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA2.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackA2::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA2.userName)
}
inline void PackA2::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA2.userName)
}
inline void PackA2::set_username(const char* value, unsigned int size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA2.userName)
}
inline ::std::string* PackA2::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA2.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PackA2::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PackA2::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA2.userName)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtobufPackets

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Setup_2eproto__INCLUDED
